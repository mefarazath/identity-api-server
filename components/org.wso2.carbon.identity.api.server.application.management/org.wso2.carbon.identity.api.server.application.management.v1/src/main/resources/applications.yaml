openapi: 3.0.0
info:
  description: >
    This document specifies a **Application Management RESTful API** for **WSO2
    Identity Server** .
  version: "0.1.0-oas3"
  title: WSO2 Identity Server - Application Management Rest API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: WSO2
    url: 'http://wso2.com/products/identity-server/'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
security:
  - OAuth2: []
  - BasicAuth: []
paths:
  /applications:
    get:
      tags:
        - Applications
      operationId: getAllApplications
      summary: |
        List applications
      description: |
        This API provides the capability to retrive the list of applications.
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - $ref: '#/components/parameters/filterQueryParam'
        - $ref: '#/components/parameters/sortOrderQueryParam'
        - $ref: '#/components/parameters/sortByQueryParam'
        - $ref: '#/components/parameters/attributesQueryParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    post:
      tags:
        - Applications
      summary: |
        Add application
      operationId: createApplication
      description: >
        This API provides the capability to store the application information
        provided by users.
      parameters:
        - in: query
          name: template
          required: false
          description: |
            Pre-defined template to use when creating the application.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
        description: This represents the application to be created.
        required: true
      responses:
        '201':
          description: Successful response.
          headers:
            Location:
              description: Location of the newly created application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: ''

  '/applications/{applicationId}':
    get:
      tags:
        - Applications
      summary: |
        Retrive application by id
      operationId: getApplication
      description: >
        This API provides the capability to retrive the application information
        by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Applications
      summary: |
        Update an application by id
      operationId: updateApplication
      description: |
        This API provides the capability to update an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response.
          headers:
            Location:
              description: Location of the updated application
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
        description: This represents the application to be updated.
        required: true
    delete:
      tags:
        - Applications
      summary: |
        Delete an application by id
      operationId: deleteApplication
      description: |
        This API provides the capability to delete an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  /applications/resident:
    get:
      tags:
        - Resident Application
      summary: |
        Get Resident Service Provider Information.
      operationId: getResidentApplication
      description: |
        This API provides the capability to retrive the resident SP information.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResidentApplication'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Resident Application
      summary: |
        Update Resident Application's provisioning configuration.
      operationId: updateResidentApplication
      description: >
        This API provides the capability to update Resident Service Provider
        Configuration.
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the provisioning configuration of the resident
                application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfiguration'
        description: >-
          This represents the provisioning configuration of the resident
          application.
        required: true
  '/applications/{applicationId}/auth-protocols/':
    get:
      tags:
        - Inbound Protocols
      summary: |
        Retrieve inbound protocol configurations of an application.
      operationId: getInboundAuthenticationConfigurations
      description: >
        This API provides the capability to retrive authentication protocol
        configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProtocols'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols
      summary: |
        Update inbound protocol configurations of an application.
      operationId: updateInboundAuthenticationConfigurations
      description: >
        This API provides the capability to update inbound protocol
        configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: Location of inbound protocol configurations of the application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProtocols'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProtocols'
        description: >-
          This represents the inbound protocol configurations of the
          application.
        required: true
    delete:
      tags:
        - Inbound Protocols
      summary: |
        Delete inbound protocol configurations of an application.
      operationId: deleteInboundAuthenticationConfigurations
      description: >
        This API provides the capability to delete inbound protocol
        configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/saml':
    get:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Retrieve SAML2 authentication protocol parameters of an application.
      operationId: getInboundSAMLConfiguration
      description: >
        This API provides the capability to retrive SAML2 authentication
        protocol parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAML2Configuration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Update SAML2 authentication protocol parameters of an application.
      operationId: updateInboundSAMLConfiguration
      description: >
        This API provides the capability to store SAML2 authentication protocol
        parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: Location of the newly created application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAML2Configuration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAML2Configuration'
        description: This represents the SAML2 protocol attributes of the application.
        required: true
    delete:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Delete SAML2 authentication protocol parameters of an application.
      operationId: deleteInboundSAMLConfiguration
      description: >
        This API provides the capability to delete SAML2 authentication protocol
        parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/oidc':
    get:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Retrieve OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve OIDC authentication
        protocol parameters of an application.
      operationId: getInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIDConnectConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Update OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to store OIDC authentication protocol
        parameters of an application.
      operationId: updateInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: Location of the newly created OIDC Authentication Configuration.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIDConnectConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenIDConnectConfiguration'
        description: >-
          This represents the OIDC authentication protocol parameters of an
          application.
        required: true
    delete:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Delete OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete OIDC authentication protocol
        parameters of an application.
      operationId: deleteInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/oidc/revoke':
    post:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Revoke the OAuth2/OIDC client configuration of an application.
      description: >
        This API provides revoke the OAuth2/OIDC client configuration of an
        application.
      operationId: revokeOAuthApplication
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/oidc/regenerate-secret':
    post:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Regenerate the OAuth2/OIDC client secret.
      description: |
        This API provides regenerate the OAuth2/OIDC client secret.
      operationId: regenerateOAuthApplicationSecret
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIDConnectConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/passive-sts':
    get:
      tags:
        - Inbound Protocols - Passive STS
      summary: >
        Retrieve Passive STS authentication protocol parameters of an
        application.
      description: >
        This API provides the capability to retrieve Passive STS authentication
        protocol parameters of an application.
      operationId: getPassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassiveStsConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - Passive STS
      summary: |
        Update Passive STS authentication protocol parameters of an application.
      description: >
        This API provides the capability to store passive STS authentication
        protocol parameters of an application.
      operationId: updatePassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created Passive STS Authentication
                Configuration.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassiveStsConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassiveStsConfiguration'
        description: >-
          This represents the Passive STS authentication protocol parameters of
          an application.
        required: true
    delete:
      tags:
        - Inbound Protocols - Passive STS
      summary: |
        Delete Passive STS authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete Passive STS authentication
        protocol parameters of an application.
      operationId: deletePassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/ws-trust':
    get:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Retrieve WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve Passive STS authentication
        protocol parameters of an application.
      operationId: getWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WSTrustConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Update WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to store WS Trust authentication
        protocol parameters of an application.
      operationId: updateWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created WS Trust Authentication
                Configuration.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WSTrustConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WSTrustConfiguration'
        description: >-
          This represents the Passive STS authentication protocol parameters of
          an application.
        required: true
    delete:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Delete WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete WS Trust authentication
        protocol parameters of an application.
      operationId: deleteWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  # '/applications/{applicationId}/auth-protocols/kerberos-kdc':
  #   get:
  #     tags:
  #       - Inbound Protocols - Kerberos KDC
  #     summary: |
  #       Retrieve Kerberos KDC parameters of an application.
  #     description: >
  #       This API provides the capability to retrieve Kerberos KDC parameters of
  #       the application.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/KerberosKDCParameters'
  #       '400':
  #         description: Bad Request
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '401':
  #         description: Unauthorized
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '403':
  #         description: Forbidden
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '404':
  #         description: Not Found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '500':
  #         description: Server Error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"
  #   put:
  #     tags:
  #       - Inbound Protocols - Kerberos KDC
  #     summary: |
  #       Update Kerberos KDC parameters of an application.
  #     description: >
  #       This API provides the capability to update the Kerberos KDC protocol
  #       parameters of an application.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application.
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: Successful
  #       '201':
  #         description: Successful response.
  #         headers:
  #           Location:
  #             description: Location of the newly created Kerberos KDC Configuration.
  #             schema:
  #               type: string
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/KerberosKDCParameters'
  #       '400':
  #         description: Bad Request
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '401':
  #         description: Unauthorized
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '403':
  #         description: Forbidden
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '404':
  #         description: Not Found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '409':
  #         description: Conflict
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '500':
  #         description: Server Error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/KerberosKDCParameters'
  #       description: This represents the Kerberos KDC configuration of an application.
  #       required: true
  #   delete:
  #     tags:
  #       - Inbound Protocols - Kerberos KDC
  #     summary: |
  #       Delete Kerberos KDC parameters of an application.
  #     description: >
  #       This API provides the capability to delete Kerberos KDC parameters of an
  #       application.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application.
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '204':
  #         description: Delete Success
  #       '400':
  #         description: Bad Request
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '401':
  #         description: Unauthorized
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '403':
  #         description: Forbidden
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '404':
  #         description: Not Found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #       '500':
  #         description: Server Error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/auth-protocols/{inboundProtocolId}':
    get:
      tags:
        - Inbound Protocols - Custom
      summary: >
        Retrieve Custom Inbound authentication protocol parameters of an
        application.
      description: >
        This API provides the capability to retrieve Custom Inbound
        authentication protocol parameters of an application.
      operationId: getCustomInboundConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          schema:
            type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomInboundProtocolConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - Custom
      summary: |
        Update WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to store WS Trust authentication
        protocol parameters of an application.
      operationId: updateCustomInboundConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created Custom Inbound authentication
                protocol Configuration.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomInboundProtocolConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomInboundProtocolConfiguration'
        description: >-
          This represents the Custom Inbound authentication protocol parameters
          of an application.
        required: true
    delete:
      tags:
        - Inbound Protocols - Custom
      summary: >
        Delete Custom Inbound authentication protocol parameters of an
        application.
      description: >
        This API provides the capability to delete Custom Inbound authentication
        protocol of an application.
      operationId: deleteCustomInboundConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/claims':
    get:
      tags:
        - Claims
      summary: |
        Retrive claim configuration application by id
      description: >
        This API provides the capability to retrive the application claim
        configuration by id.
      operationId: getClaimConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Claims
      summary: |
        Update the claim configuration of an application by id
      description: >
        This API provides the capability to update claim configuration of an
        application.
      operationId: updateClaimConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created claim Configuration of the
                application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimConfiguration'
        description: This represents the application to be updated.
        required: true
    delete:
      tags:
        - Claims
      summary: |
        Delete claim configuration of an application by id
      description: |
        This API provides the capability to delete an application by id.
      operationId: deleteClaimConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/advanced-configs':
    get:
      tags:
        - Advanced Configs
      summary: |
        Retrive advanced configurations of an application by id
      description: >
        This API provides the capability to retrive the advanced configurations
        of an application by id.
      operationId: getAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedApplicationConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Advanced Configs
      summary: |
        Update the the advanced configurations of an application by id
      description: >
        This API provides the capability to update the advanced configurations
        of an application by id.
      operationId: updateAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created advanced configurations of the
                application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvancedApplicationConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedApplicationConfiguration'
        description: >-
          This represents advanced configurations of the application to be
          updated.
        required: true
    delete:
      tags:
        - Advanced Configs
      summary: |
        Delete advanced configurations of an application by id
      description: >
        This API provides the capability to delete advanced configurations an
        application by id.
      operationId: deleteAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/provisioning-configs':
    get:
      tags:
        - Provisioning Configs
      summary: |
        Retrive provisioning configurations of application by id
      description: >
        This API provides the capability to retrive the provisioning
        configurations of an application by id.
      operationId: getProvisioningConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Provisioning Configs
      summary: |
        Update the the provisioning configurations of an application by id
      description: >
        This API provides the capability to update the provisioning
        configurations of an application by id.
      operationId: updateProvisioningConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created provisioning configurations of the
                application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConfiguration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningConfiguration'
        description: >-
          This represents provisioning configurations of the application to be
          updated.
        required: true
    delete:
      tags:
        - Provisioning Configs
      summary: |
        Delete provisioning configurations of an application by id
      description: >
        This API provides the capability to delete provisioning configurations
        an application by id.
      operationId: deleteProvisioningConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
  '/applications/{applicationId}/authentication-sequences':
    get:
      tags:
        - Authentication Sequence
      summary: |
        Retrive authentication sequence of application by id
      description: >
        This API provides the capability to retrive authentication sequence of
        an application by id.
      operationId: getAuthenticationSequence
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSequence'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Authentication Sequence
      summary: |
        Update the the authentication sequence of an application by id
      description: >
        This API provides the capability to update the authentication sequence
        of an application by id.
      operationId: updateAuthenticationSequence
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              description: >-
                Location of the newly created provisioning configurations of the
                application.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSequence'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationSequence'
        description: >-
          This represents provisioning configurations of the application to be
          updated.
        required: true
    delete:
      tags:
        - Authentication Sequence
      summary: |
        Delete authentication sequence of an application by id
      description: >
        This API provides the capability to delete the authentication sequence
        an application by id.
      operationId: deleteAuthenticationSequence
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

servers:
  - url: 'https://{server-url}/t/{tenant-domain}/api/server/v1'
    variables:
      tenant-domain:
        default: "carbon.super"
      server-url:
        default: "localhost:9443"

components:
  parameters:
    limitQueryParam:
      in: query
      name: limit
      required: false
      description: |
        Maximum number of records to return.
      schema:
        type: integer
        format: int32
    offsetQueryParam:
      in: query
      name: offset
      required: false
      description: |
        Number of records to skip for pagination.
      schema:
        type: integer
        format: int32
    filterQueryParam:
      in: query
      name: filter
      required: false
      description: |
        Condition to filter the retrival of records. Supports 'sw', 'co', 'ew' and 'eq' operations. Currently supports only filtering based on the 'name' attribute.

        /applications?filter=name+eq+user_portal
        /applications?filter=name+co+prod
      schema:
        type: string
    sortOrderQueryParam:
      in: query
      name: sortOrder
      required: false
      description: |
        Define the order in which the retrieved records should be sorted.
        _This parameter is not supported yet._
      schema:
        type: string
        enum:
          - ascending
          - descending
    sortByQueryParam:
      in: query
      name: sortBy
      required: false
      description: |
        Attribute by which the retrieved records should be sorted.
        _This parameter is not supported yet._
      schema:
        type: string
    attributesQueryParam:
      in: query
      name: attributes
      required: false
      description: |
        Specifies the required parameters in the response
        _This parameter is not supported yet_
      schema:
        type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://localhost:9443/oauth2/authorize'
          tokenUrl: 'http://localhost:9763/oauth2/token'
          scopes: {}
  schemas:
    Link:
      type: object
      properties:
        href:
          type: string
          example: "applications?offset=10&limit=10"
        rel:
          type: string
          example: "next"


    ApplicationListResponse:
      type: object
      properties:
        totalResults:
          type: integer
          description: "Number of results that match the listing operation."
          example: 1
        startIndex:
          type: integer
          description: "Index of the first element of the page, which will be equal to offset + 1."
          example: 1
        count:
          type: integer
          description: "Number of elements in the returned page."
          example: 10
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationListItem'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'


    ApplicationListItem:
      type: object
      properties:
        id:
          type: string
          example: "85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
        name:
          type: string
          example: "user-portal"
        description:
          type: string
          example: Application representing user portal
        image:
          type: string
          example: 'https://example.com/logo/my-logo.png'
        loginUrl:
          type: string
          example: 'https://example.com/app/login'
        self:
          type: string
          example: "/t/wso2.com/api/server/v1/applications/85e3f4b8-0d22-4181-b1e3-1651f71b88bd"

    ApplicationModel:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          example: "394b8adcce24c64a8a09a0d80abf8c337bd253de"
          readOnly: true
        name:
          type: string
          example: pickup
        description:
          type: string
          example: This is the configuration for Pickup application.
        imageUrl:
          type: string
          example: 'https://example.com/logo/my-logo.png'
        loginUrl:
          type: string
          example: 'https://example.com/login'
        claimConfiguration:
          $ref: '#/components/schemas/ClaimConfiguration'
        inboundProtocolConfiguration:
          $ref: '#/components/schemas/InboundProtocols'
        authenticationSequence:
          $ref: '#/components/schemas/AuthenticationSequence'
        advancedConfigurations:
          $ref: '#/components/schemas/AdvancedApplicationConfiguration'
        provisioningConfigurations:
          $ref: '#/components/schemas/ProvisioningConfiguration'

    ResidentApplication:
      type: object
      properties:
        provisioningConfigurations:
          $ref: '#/components/schemas/ProvisioningConfiguration'

    ProvisioningConfiguration:
      type: object
      properties:
        inboundProvisioning:
          $ref: '#/components/schemas/InboundSCIMProvisioningConfiguration'
        outboundProvisioningIdps:
          type: array
          items:
            $ref: '#/components/schemas/OutboundProvisioningConfiguration'
    InboundSCIMProvisioningConfiguration:
      type: object
      properties:
        proxy-mode:
          type: boolean
          example: false
        provisioningUserstoreDomain:
          type: string
          example: PRIMARY
          description: >-
            This property becomes only applicable if the proxy-mode config is
            set to false

    # InboundProvisioningSCIMConfiguration:
    #   type: object
    #   properties:
    #     provisioningUserstoreDomain:
    #       type: string
    #       example: PRIMARY
    #       description: >-
    #         This property becomes only applicable if the proxy-mode config is
    #         set to false
    #     proxy-mode:
    #       type: boolean
    #       example: false
    OutboundProvisioningConfiguration:
      type: object
      properties:
        idp:
          type: string
          example: Google
        connector:
          type: string
          example: googleapps
        blocking:
          type: boolean
          example: false
        rules:
          type: boolean
          example: false
        jit:
          type: boolean
          example: false
    AdvancedApplicationConfiguration:
      type: object
      properties:
        saas:
          type: boolean
          example: false
          description: Decide whether this application is allowed to be accessed across tenants.
        certificate:
          $ref: '#/components/schemas/Certificate'
        skipConsent:
          type: boolean
          example: false
        returnAuthenticatedIdpList:
          type: boolean
          example: false
          description: Decide whether authenticated identity provider list needs to returned in the authentication response.
        enableAuthorization:
          type: boolean
          example: true
    Certificate:
      type: object
      properties:
        type:
          type: string
          enum:
            - JWKS
            - PEM
        value:
          type: string
          description: >-
            Certificate value. If type is JWKS, value should be jwks URL. If
            type is PEM, value should be the certificate in PEM format.
    InboundProtocols:
      type: object
      properties:
        saml:
          $ref: '#/components/schemas/SAML2Configuration'
        oidc:
          $ref: '#/components/schemas/OpenIDConnectConfiguration'
        passiveSts:
          $ref: '#/components/schemas/PassiveStsConfiguration'
        wsTrust:
          $ref: '#/components/schemas/WSTrustConfiguration'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomInboundProtocolConfiguration'

            # InboundProtocol:
            #   oneOf:
            #     - $ref: '#/components/schemas/SAML2Configuration'
            #     - $ref: '#/components/schemas/OpenIDConnectConfiguration'
            #     - $ref: '#/components/schemas/PassiveStsConfiguration'
            #     - $ref: '#/components/schemas/WSTrustConfiguration'
            #     - $ref: '#/components/schemas/CustomInboundProtocolConfiguration'
            #   discriminator:
            #     propertyName: inboundType

            # type: object
            # properties:
            #   saml:
            #     $ref: '#/components/schemas/SAML2Configuration'
            #   oidc:
            #     $ref: '#/components/schemas/OpenIDConnectConfiguration'
            #   passiveSts:
            #     $ref: '#/components/schemas/PassiveStsConfiguration'
            #   wsTrust:
            #     $ref: '#/components/schemas/WSTrustConfiguration'
            #   # kerberosKDC:
            #   #   $ref: '#/components/schemas/KerberosKDCParameters'
            #   custom:
            #     type: array
            #     items:
            #       $ref: '#/components/schemas/CustomInboundProtocolConfiguration'


    ClaimConfiguration:
      type: object
      properties:
        dialect:
          type: string
          enum:
            - CUSTOM
            - EXTERNAL
            - LOCAL
          default: LOCAL
        claimMappings:
          type: array
          items:
            $ref: '#/components/schemas/ClaimMappings'
        requestedClaims:
          type: array
          items:
            $ref: '#/components/schemas/RequestedClaimConfiguration'
        subject:
          $ref: '#/components/schemas/SubjectConfig'
        role:
          $ref: '#/components/schemas/RoleConfig'
    SubjectConfig:
      type: object
      properties:
        claimId:
          type: string
          example: 'http://wso2.org/claims/emailaddress'
        includeUserDomain:
          type: boolean
          example: false
        includeTenantDomain:
          type: boolean
          example: false
        useMappedLocalSubject:
          type: boolean
          example: false
    RoleConfig:
      type: object
      properties:
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/RoleMapping'
        includeUserDomain:
          type: boolean
          example: true
        claimId:
          type: string
          example: 'http://wso2.org/claims/groups'
    RoleMapping:
      type: object
      properties:
        localRole:
          type: string
          example: admin
        applicationRole:
          type: string
          example: Administrator
    RequestedClaimConfiguration:
      type: object
      properties:
        claimUri:
          type: string
          example: 'http://wso2.org/claims/givenname'
          description: >-
            User claims that need to be sent back to the application. If the
            claim mappings are local, use local claim uris. If the custom claim
            mappings are configured, use the mapped applicationClaimUri
        mandatory:
          type: boolean
          example: false
    ClaimMappings:
      type: object
      properties:
        applicationClaimUri:
          type: string
          example: firstname
        localClaimUri:
          type: string
          example: 'http://wso2.org/claims/givenname'

    SAML2Configuration:
      type: object
      properties:
        issuer:
          type: string
        assertionConsumerUrls:
          type: array
          items:
            type: string
        defaultAssertionConsumerUrl:
          type: string
        enableRequestSigning:
          type: boolean
          default: true
        enableAssertionEncryption:
          type: boolean
          default: false
        enableResponseSigning:
          type: boolean
          default: true
        serviceProviderQualifier:
          type: string
        nameIdFormat:
          type: string
          default: 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress'
          example: 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress'
        requestValidationCertificateAlias:
          type: string
        responseSigningAlgorithm:
          type: string
        responseDigestAlgorithm:
          type: string
        assertionEncryptionAlgroithm:
          type: string
        keyEncryptionAlgorithm:
          type: string
        enableSingleLogout:
          type: boolean
          default: true
        singleLogoutResponseUrl:
          type: string
          description: Single logout response accepting endpoint
        singleLogoutRequestUrl:
          type: string
          description: Single logout request accepting endpoint
        singleLogoutMethod:
          type: string
          enum:
            - backchannel
            - frontchannel_http_redirect
            - frontchannel_http_post
        enableIdpInitiatedSingleSignOn:
          type: boolean
          default: false
        enableIdpInitiatedSingleLogOut:
          type: boolean
          default: false

    OpenIDConnectConfiguration:
      type: object
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        state:
          type: string
          enum:
            - ACTIVE
            - REVOKED
          readOnly: true
          default: ACTIVE
        grantTypes:
          type: array
          example:
            - authorization_code
            - password
          items:
            type: string
        callbackURLs:
          type: array
          description: Authorized redirect URIs
          example:
            - 'https://app.example.com/callback1'
            - 'https://app.example.com/callback2'
          items:
            type: string
        allowedOrigins:
          type: array
          description: Authorized JavaScript origins
          example:
            - 'https://app.example.com/js'
          items:
            type: string
        publicClient:
          type: boolean
          default: false
          description: >-
            Enabling this option will allow the client to authenticate without a
            client secret
          example: false
        pkce:
          $ref: '#/components/schemas/OAuth2PKCEConfiguration'
        accessToken:
          $ref: '#/components/schemas/AccessTokenConfiguration'
        refreshToken:
          $ref: '#/components/schemas/RefreshTokenConfiguration'
        idToken:
          $ref: '#/components/schemas/IdTokenConfiguration'
        logout:
          $ref: '#/components/schemas/OIDCLogoutConfiguration'
        validateRequestObjectSignature:
          type: boolean
          default: false
          example: false
        scopeValidators:
          type: array
          example:
            - XACMLScopeValidator
            - RoleBasedScopeValidator
          items:
            type: string
      required:
        - grantTypes
        - version
    OAuth2PKCEConfiguration:
      type: object
      properties:
        mandatory:
          type: boolean
          example: false
        supportPlainTransformAlgorithm:
          type: boolean
          example: true
    AccessTokenConfiguration:
      type: object
      properties:
        type:
          type: string
          example: JWT
        userAccessTokenExpiryInSeconds:
          type: integer
          format: int64
          example: 3600
        applicationAccessTokenExpiryInSeconds:
          type: integer
          format: int64
          example: 3600
    RefreshTokenConfiguration:
      type: object
      properties:
        expiryInSeconds:
          type: integer
          format: int64
          example: 86400
        renewRefreshToken:
          description: "Decideds the refresh token needs to renewed during refresh grant flow"
          type: boolean
          example: true
    IdTokenConfiguration:
      type: object
      properties:
        expiryInSeconds:
          type: integer
          format: int64
          example: 3600
        audience:
          type: array
          example:
            - 'http://idp.xyz.com'
            - 'http://idp.abc.com'
          items:
            type: string
        encryption:
          $ref: '#/components/schemas/IdTokenEncryptionConfiguration'
    IdTokenEncryptionConfiguration:
      type: object
      properties:
        enabled:
          type: boolean
          default: false
          example: false
        algorithm:
          type: string
          example: RSA-OAEP
        method:
          type: string
          example: A128CBC+HS256
    OIDCLogoutConfiguration:
      type: object
      properties:
        # backChannelLogout:
        #   $ref: '#/components/schemas/OIDCBackChannelLogoutConfig'
        backChannelLogoutUrl:
          type: string
          example: 'https://app.example.com/backchannel/callback'
        frontChannelLogoutUrl:
          type: string
          example: 'https://app.example.com/frontchannel/callback'

    # OIDCBackChannelLogoutConfig:
    #   type: object
    #   properties:
    #     # enabled:
    #     #   type: boolean
    #     #   default: false
    #     #   example: false
    #     backChannelLogoutUrl:
    #       type: string
    #       example: 'https://app.example.com/backchannellogout/callback'


    PassiveStsConfiguration:
      type: object
      properties:
        realm:
          type: string
        replyTo:
          type: string
    WSTrustConfiguration:
      type: object
      required:
        - audience
        - certificateAlias
      properties:
        audience:
          type: string
          description: Audience value of the trusted service
          example: https://wstrust.endpoint.com
        certificateAlias:
          type: string
          example: "wso2carbon"
    # KerberosKDCParameters:
    #   type: object
    #   required:
    #     - serviceName
    #     - password
    #   properties:
    #     serviceName:
    #       type: string
    #     description:
    #       type: string
    #     password:
    #       type: string
    CustomInboundProtocolConfiguration:
      type: object
      required:
        - name
        - inboundKey
      properties:
        name:
          type: string
          example: custom-wso2-inbound
        inboundKey:
          type: string
          example: custom-wso2-inbound-id
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    Property:
      type: object
      properties:
        key:
          type: string
          example: app-identifier
        value:
          type: string
          example: 'http://app.wso2.com/employeeApp'
    AuthenticationSequence:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationStep'
        script:
          type: string
        subjectStepId:
          type: string
          example: step1
        attributeStepId:
          type: string
          example: step1
    AuthenticationStep:
      type: object
      properties:
        id:
          type: string
          example: step1
        options:
          type: array
          items:
            $ref: '#/components/schemas/Authenticator'
    Authenticator:
      type: object
      properties:
        idp:
          type: string
          example: LOCAL
        authenticator:
          type: string
          example: basic

    Error:
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some error message.
        description:
          type: string
          example: Some error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047