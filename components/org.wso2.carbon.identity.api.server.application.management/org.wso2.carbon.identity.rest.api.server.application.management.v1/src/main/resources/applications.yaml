swagger: '2.0'
info:
  description: >
    This document specifies a **Application Management RESTful API** for **WSO2
    Identity Server** .
  version: "0.1.0"
  title: WSO2 Identity Server - Application Management Rest API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: WSO2
    url: 'http://wso2.com/products/identity-server/'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: iam.example.com
basePath: '/t/{tenant-domain}/api/server/v1'
schemes:
  - https

# Applicable authentication mechanisms.
security:
  - OAuth2: []
  - BasicAuth: []

consumes:
  - application/json
produces:
  - application/json
paths:
  /applications:
    get:
      tags:
        - Applications
      operationId: getApplications
      summary: |
        List applications
      description: |
        This API provides the capability to retrive the list of applications.
      produces:
        - application/json
        - application/xml
      parameters:
        - $ref : '#/parameters/limitQueryParam'
        - $ref : '#/parameters/offsetQueryParam'
        - $ref : '#/parameters/filterQueryParam'
        - $ref : '#/parameters/sortQueryParam'
        - $ref : '#/parameters/sortByQueryParam'
        - $ref : '#/parameters/requiredAttributesQueryParam'

      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationListResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

    post:
      tags:
        - Applications
      summary: |
        Add application
      operationId: createApplication
      description: >
        This API provides the capability to store the application information
        provided by users.
      consumes:
        - application/json
        - application/xml
      parameters:
        - in: body
          name: application
          description: This represents the application to be created.
          required: true
          schema:
            $ref: '#/definitions/ApplicationRequest'
      responses:
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created application.
          schema:
            $ref: '#/definitions/ApplicationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: ''

        # /applications/import:
        #   post:
        #     tags:
        #       - Applications
        #     summary: Imports an application
        #     description: >
        #       This API provides the capability to import an application exported using
        #       the application export API.
        #     operationId: importApplication
        #     consumes:
        #       - application/xml
        #     parameters:
        #       - in: body
        #         name: application
        #         description: Serialized application data to be imported
        #         required: true
        #         schema:
        #           type: string
        #     responses:
        #       '201':
        #         description: Successful response.
        #         headers:
        #           Location:
        #             type: string
        #             description: Location of the newly created application.
        #       '400':
        #         description: Bad Request
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '401':
        #         description: Unauthorized
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '403':
        #         description: Forbidden
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '409':
        #         description: Conflict
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '500':
        #         description: Server Error
        #         schema:
        #           $ref: '#/definitions/Error'

  '/applications/{applicationId}':
    get:
      tags:
        - Applications
      summary: |
        Retrive application by id
      operationId: getApplication
      description: >
        This API provides the capability to retrive the application information
        by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationResponse'

        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Applications
      summary: |
        Update an application by id
      operationId: updateApplication
      description: |
        This API provides the capability to update an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: application
          description: This represents the application to be updated.
          required: true
          schema:
            $ref: '#/definitions/ApplicationResponse'
      responses:
        '200':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the updated application
          schema:
            $ref: '#/definitions/ApplicationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Applications
      summary: |
        Delete an application by id
      operationId: deleteApplication
      description: |
        This API provides the capability to delete an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

        # '/applications/{applicationId}/export':
        #   get:
        #     tags:
        #       - Applications
        #     summary: |
        #       Export the application
        #     description: >
        #       This API provides the exportable application representation that could
        #       be imported in a different server.
        #     produces:
        #       - application/xml
        #     parameters:
        #       - name: applicationId
        #         in: path
        #         description: Id of the application.
        #         required: true
        #         type: string
        #     responses:
        #       '200':
        #         description: OK
        #         schema:
        #           type: string
        #       '400':
        #         description: Bad Request
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '401':
        #         description: Unauthorized
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '403':
        #         description: Forbidden
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '404':
        #         description: Not Found
        #         schema:
        #           $ref: '#/definitions/Error'
        #       '500':
        #         description: Server Error
        #         schema:
        #           $ref: '#/definitions/Error'


  '/applications/resident':
    get:
      tags:
        - Resident Application
      summary: |
        Get Resident Service Provider Information.
      operationId: getResidentApplication
      description: |
        This API provides the capability to retrive the resident SP information.

      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResidentApplication'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Resident Application
      summary: |
        Update Resident Application's provisioning configuration.
      operationId: updateResidentApplication
      description: >
        This API provides the capability to update Resident Service Provider Configuration.
      parameters:
        - in: body
          name: provisioningConfiguration
          description: This represents the provisioning configuration of the resident application.
          required: true
          schema:
            $ref: '#/definitions/ProvisioningConfiguration'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the provisioning configuration of the resident application.
          schema:
            $ref: '#/definitions/ProvisioningConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"


  '/applications/{applicationId}/auth-protocols/':
    get:
      tags:
        - Inbound Protocols
      summary: |
        Retrieve inbound protocol configurations of an application.
      operationId: getInboundAuthenticationConfigurations
      description: >
        This API provides the capability to retrive authentication protocol configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InboundProtocols'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols
      summary: |
        Update inbound protocol configurations of an application.
      operationId: updateInboundAuthenticationConfigurations
      description: >
        This API provides the capability to update inbound protocol configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: inboundProtocols
          description: This represents the inbound protocol configurations of the application.
          required: true
          schema:
            $ref: '#/definitions/InboundProtocols'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of inbound protocol configurations of the application.
          schema:
            $ref: '#/definitions/InboundProtocols'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols
      summary: |
        Delete inbound protocol configurations of an application.
      operationId: deleteInboundAuthenticationConfigurations
      description: >
        This API provides the capability to delete inbound protocol configurations of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"



  '/applications/{applicationId}/auth-protocols/saml':
    get:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Retrieve SAML2 authentication protocol parameters of an application.
      operationId: getInboundSAMLConfiguration
      description: >
        This API provides the capability to retrive SAML2 authentication
        protocol parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SAML2Parameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Update SAML2 authentication protocol parameters of an application.
      operationId: updateInboundSAMLConfiguration
      description: >
        This API provides the capability to store SAML2 authentication protocol
        parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: saml2-configuration
          description: This represents the SAML2 protocol attributes of the application.
          required: true
          schema:
            $ref: '#/definitions/SAML2Parameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created application.
          schema:
            $ref: '#/definitions/SAML2Parameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - SAML
      summary: |
        Delete SAML2 authentication protocol parameters of an application.
      operationId: deleteInboundSAMLConfiguration
      description: >
        This API provides the capability to delete SAML2 authentication protocol
        parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete successful
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"


  '/applications/{applicationId}/auth-protocols/oidc':
    get:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Retrieve OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve OIDC authentication
        protocol parameters of an application.
      operationId: getInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OIDCParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Update OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to store OIDC authentication protocol
        parameters of an application.
      operationId: updateInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: parameters
          description: >-
            This represents the OIDC authentication protocol parameters of an application.
          required: true
          schema:
            $ref: '#/definitions/OIDCParameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created OIDC Authentication Configuration.
          schema:
            $ref: '#/definitions/OIDCParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Delete OIDC authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete OIDC authentication protocol
        parameters of an application.
      operationId: deleteInboundOAuthConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"


  '/applications/{applicationId}/auth-protocols/oidc/revoke':
    post:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Revoke the OAuth2/OIDC client configuration of an application.
      description: >
        This API provides revoke the OAuth2/OIDC client configuration of an application.
      operationId: revokeOAuthApplication
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string

      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  '/applications/{applicationId}/auth-protocols/oidc/regenerate-secret':
    post:
      tags:
        - Inbound Protocols - OAuth / OIDC
      summary: |
        Regenerate the OAuth2/OIDC client secret.
      description: >
        This API provides regenerate the OAuth2/OIDC client secret.
      operationId: regenerateOAuthApplicationSecret
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OIDCParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"


  '/applications/{applicationId}/auth-protocols/passive-sts':
    get:
      tags:
        - Inbound Protocols - Passive STS
      summary: |
        Retrieve Passive STS authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve Passive STS authentication
        protocol parameters of an application.
      operationId: getPassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PassiveSTSParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - Passive STS
      summary: |
        Update Passive STS authentication protocol parameters of an application.
      description: >
        This API provides the capability to store passive STS authentication
        protocol parameters of an application.
      operationId: updatePassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: parameters
          description: >-
            This represents the Passive STS authentication protocol parameters
            of an application.
          required: true
          schema:
            $ref: '#/definitions/PassiveSTSParameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created Passive STS Authentication Configuration.
          schema:
            $ref: '#/definitions/PassiveSTSParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - Passive STS
      summary: |
        Delete Passive STS authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete Passive STS authentication
        protocol parameters of an application.
      operationId: deletePassiveStsConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  '/applications/{applicationId}/auth-protocols/ws-trust':
    get:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Retrieve WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve Passive STS authentication
        protocol parameters of an application.
      operationId: getWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WSTrustParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Update WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to store WS Trust authentication
        protocol parameters of an application.
      operationId: updateWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: parameters
          description: >-
            This represents the Passive STS authentication protocol parameters
            of an application.
          required: true
          schema:
            $ref: '#/definitions/WSTrustParameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created WS Trust Authentication Configuration.
          schema:
            $ref: '#/definitions/WSTrustParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - WS Trust
      summary: |
        Delete WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete WS Trust authentication
        protocol parameters of an application.
      operationId: deleteWSTrustConfiguration
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  '/applications/{applicationId}/auth-protocols/kerberos-kdc':
    get:
      tags:
        - Inbound Protocols - Kerberos KDC
      summary: |
        Retrieve Kerberos KDC parameters of an application.
      description: >
        This API provides the capability to retrieve Kerberos KDC parameters of the application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KerberosKDCParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - Kerberos KDC
      summary: |
        Update Kerberos KDC parameters of an application.
      description: >
        This API provides the capability to update the Kerberos KDC
        protocol parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: parameters
          description: >-
            This represents the Kerberos KDC configuration
            of an application.
          required: true
          schema:
            $ref: '#/definitions/KerberosKDCParameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created Kerberos KDC Configuration.
          schema:
            $ref: '#/definitions/KerberosKDCParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - Kerberos KDC
      summary: |
        Delete Kerberos KDC parameters of an application.
      description: >
        This API provides the capability to delete Kerberos KDC
        parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  '/applications/{applicationId}/auth-protocols/{inboundProtocolId}':
    get:
      tags:
        - Inbound Protocols - Custom
      summary: |
        Retrieve Custom Inbound authentication protocol parameters of an application.
      description: >
        This API provides the capability to retrieve Custom Inbound authentication protocol parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application
          required: true
          type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomInboundProtcolParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Inbound Protocols - Custom
      summary: |
        Update WS Trust authentication protocol parameters of an application.
      description: >
        This API provides the capability to store WS Trust authentication
        protocol parameters of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          type: string
        - in: body
          name: parameters
          description: >-
            This represents the Custom Inbound authentication protocol parameters of an application.
          required: true
          schema:
            $ref: '#/definitions/CustomInboundProtcolParameters'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created Custom Inbound authentication protocol Configuration.
          schema:
            $ref: '#/definitions/CustomInboundProtcolParameters'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Inbound Protocols - Custom
      summary: |
        Delete Custom Inbound authentication protocol parameters of an application.
      description: >
        This API provides the capability to delete Custom Inbound authentication protocol of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - name: inboundProtocolId
          in: path
          description: Inbound Authentication Protocol ID
          required: true
          type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  '/applications/{applicationId}/claims':
    get:
      tags:
        - Claims
      summary: |
        Retrive claim configuration application by id
      description: >
        This API provides the capability to retrive the application claim configuration by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClaimConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Claims
      summary: |
        Update the claim configuration of an application by id
      description: |
        This API provides the capability to update claim configuration of an application.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: application
          description: This represents the application to be updated.
          required: true
          schema:
            $ref: '#/definitions/ClaimConfiguration'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created claim Configuration of the application.
          schema:
            $ref: '#/definitions/ClaimConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Claims
      summary: |
        Delete claim configuration of an application by id
      description: |
        This API provides the capability to delete an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"



  #----------------------------------------------------
  # Application Permissions APIs
  #----------------------------------------------------

  # '/applications/{applicationId}/permissions':
  #   get:
  #     tags:
  #       - Permissions
  #     summary: |
  #       Retrive application specific permissions by application id
  #     description: >
  #       This API provides the capability to retrieve application specific permissions by id.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application.
  #         required: true
  #         type: string
  #     responses:
  #       '200':
  #         description: OK
  #         schema:
  #           $ref: '#/definitions/ApplicationPermissions'
  #       '400':
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '403':
  #         description: Forbidden
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not Found
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Server Error
  #         schema:
  #           $ref: '#/definitions/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"
  #   put:
  #     tags:
  #       - Permissions
  #     summary: |
  #       Update the application specific permissions of an application by id
  #     description: |
  #       This API provides the capability to update application specific permissions of an application.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application.
  #         required: true
  #         type: string
  #       - in: body
  #         name: Permissions
  #         description: This represents the application permissions to be updated.
  #         required: true
  #         schema:
  #           $ref: '#/definitions/ApplicationPermissions'
  #     responses:
  #       '200':
  #         description: Successful
  #       '201':
  #         description: Successful response.
  #         headers:
  #           Location:
  #             type: string
  #             description: Location of the newly created application specific permissions of the application.
  #         schema:
  #           $ref: '#/definitions/ApplicationPermissions'
  #       '400':
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '403':
  #         description: Forbidden
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not Found
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Server Error
  #         schema:
  #           $ref: '#/definitions/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"
  #   delete:
  #     tags:
  #       - Permissions
  #     summary: |
  #       Delete application specific permissions of an application by id
  #     description: |
  #       This API provides the capability to delete an application by id.
  #     parameters:
  #       - name: applicationId
  #         in: path
  #         description: Id of the application.
  #         required: true
  #         type: string
  #     responses:
  #       '204':
  #         description: Successfully Deleted
  #       '400':
  #         description: Bad Request
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '401':
  #         description: Unauthorized
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '403':
  #         description: Forbidden
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '404':
  #         description: Not Found
  #         schema:
  #           $ref: '#/definitions/Error'
  #       '500':
  #         description: Server Error
  #         schema:
  #           $ref: '#/definitions/Error'
  #     x-wso2-request: ''
  #     x-wso2-response: |
  #       "HTTP/1.1 200 Ok"

  #----------------------------------------------------
  # Advanced Authentication Configuration APIs
  #----------------------------------------------------
  '/applications/{applicationId}/advanced-configs':
    get:
      tags:
        - Advanced Configs
      summary: |
        Retrive advanced configurations of an application by id
      description: >
        This API provides the capability to retrive the advanced configurations of an application by id.
      operationId: getAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdvancedAuthenticationConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Advanced Configs
      summary: |
        Update the the advanced configurations of an application by id
      description: |
        This API provides the capability to update the advanced configurations of an application by id.
      operationId: updateAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: advancedConfigurations
          description: This represents advanced configurations of the application to be updated.
          required: true
          schema:
            $ref: '#/definitions/AdvancedAuthenticationConfiguration'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created advanced configurations of the application.
          schema:
            $ref: '#/definitions/AdvancedAuthenticationConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Advanced Configs
      summary: |
        Delete advanced configurations of an application by id
      description: |
        This API provides the capability to delete advanced configurations an application by id.
      operationId: deleteAdvancedConfigurations
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  #----------------------------------------------------
  # Provisioning Configuration APIs
  #----------------------------------------------------
  '/applications/{applicationId}/provisioning-configs':
    get:
      tags:
        - Provisioning Configs
      summary: |
        Retrive provisioning configurations of application by id
      description: >
        This API provides the capability to retrive the provisioning configurations of an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProvisioningConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Provisioning Configs
      summary: |
        Update the the provisioning configurations of an application by id
      description: |
        This API provides the capability to update the provisioning configurations of an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: provisioningConfiguration
          description: This represents provisioning configurations of the application to be updated.
          required: true
          schema:
            $ref: '#/definitions/ProvisioningConfiguration'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created provisioning configurations of the application.
          schema:
            $ref: '#/definitions/ProvisioningConfiguration'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Provisioning Configs
      summary: |
        Delete provisioning configurations of an application by id
      description: |
        This API provides the capability to delete provisioning configurations an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"

  #----------------------------------------------------
  # Authentication Sequence APIs
  #----------------------------------------------------
  '/applications/{applicationId}/authentication-sequences':
    get:
      tags:
        - Authentication Sequence
      summary: |
        Retrive authentication sequence of application by id
      description: >
        This API provides the capability to retrive authentication sequence of an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthenticationSequence'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    put:
      tags:
        - Authentication Sequence
      summary: |
        Update the the authentication sequence of an application by id
      description: |
        This API provides the capability to update the authentication sequence of an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
        - in: body
          name: provisioningConfigurations
          description: This represents provisioning configurations of the application to be updated.
          required: true
          schema:
            $ref: '#/definitions/AuthenticationSequence'
      responses:
        '200':
          description: Successful
        '201':
          description: Successful response.
          headers:
            Location:
              type: string
              description: Location of the newly created provisioning configurations of the application.
          schema:
            $ref: '#/definitions/AuthenticationSequence'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
    delete:
      tags:
        - Authentication Sequence
      summary: |
        Delete authentication sequence of an application by id
      description: |
        This API provides the capability to delete the authentication sequence an application by id.
      parameters:
        - name: applicationId
          in: path
          description: Id of the application.
          required: true
          type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/Error'
      x-wso2-request: ''
      x-wso2-response: |
        "HTTP/1.1 200 Ok"


#-----------------------------------------------------
# Object Definitions
#-----------------------------------------------------
definitions:
  ApplicationListResponse:
    type: object
    properties:
      totalResults:
        type: integer
        example: 1
      startIndex:
        type: integer
        example: 1
      limitPerPage:
        type: integer
        example: 10
      applications:
        type: array
        items:
          $ref: '#/definitions/ApplicationBasicInfo'

  ApplicationBasicInfo:
    type: object
    properties:
      id:
        type: string
        example: "85e3f4b8-0d22-4181-b1e3-1651f71b88bd"
      name:
        type: string
        example: "user-portal"
      description:
        type: string
        example: "Application representing user portal"
      logo:
        type: string
        example: "https://example.com/logo/my-logo.png"
      location:
        type: string
        example: "https://iam.example.com/t/wso2.com/api/server/v1/applications/85e3f4b8-0d22-4181-b1e3-1651f71b88bd"

  #----------------------------------------------------
  # The Application Request object
  #----------------------------------------------------
  ApplicationRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: "pickup"
      description:
        type: string
        example: "This is the configuration for Pickup application."
      homePage:
        type: string
        example: "https://example.com"
      image:
        type: string
        example: "https://example.com/logo/my-logo.png"
      # owner:
      #   type: string
      #   example: "app-admin@wso2.com"
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

      claimConfiguration:
        $ref: '#/definitions/ClaimConfiguration'
      permissionConfiguration:
        $ref: '#/definitions/ApplicationPermissions'
      inboundProtocols:
        $ref: '#/definitions/InboundProtocols'
      authenticationSequence:
        $ref: '#/definitions/AuthenticationSequence'
      advancedConfigurations:
        $ref: '#/definitions/AdvancedAuthenticationConfiguration'
      provisioningConfigurations:
        $ref: '#/definitions/ProvisioningConfiguration'

          #-----------------------------------------------------
          # The Application Response object
          #-----------------------------------------------------
          # ApplicationResponse:
          #   allOf:
          #     - $ref: '#/definitions/ResourceId'
          #     - $ref: '#/definitions/ApplicationRequest'

          # ResourceId:
          #   type: object
          #   required:
          #         - id
          #   properties:
          #     id:
          #       type: string
          #       example: "394b8adcce24c64a8a09a0d80abf8c337bd253de"

  ApplicationResponse:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        example: "394b8adcce24c64a8a09a0d80abf8c337bd253de"
      name:
        type: string
        example: "pickup"
      description:
        type: string
        example: "This is the configuration for Pickup application."
      homePage:
        type: string
        example: "https://example.com"
      logo:
        type: string
        example: "https://example.com/logo/my-logo.png"
      owner:
        type: string
        example: "app-admin@wso2.com"
      spProperties:
        type: array
        items:
          $ref: '#/definitions/Property'

      claimConfiguration:
        $ref: '#/definitions/ClaimConfiguration'
      permissionConfiguration:
        $ref: '#/definitions/ApplicationPermissions'
      inboundProtocols:
        $ref: '#/definitions/InboundProtocols'
      authenticationSequence:
        $ref: '#/definitions/AuthenticationSequence'
      advancedConfigurations:
        $ref: '#/definitions/AdvancedAuthenticationConfiguration'
      provisioningConfigurations:
        $ref: '#/definitions/ProvisioningConfiguration'



  ResidentApplication:
    type: object
    properties:
      provisioningConfigurations:
        $ref: '#/definitions/ProvisioningConfiguration'


  Error:
    type: object
    properties:
      code:
        type: string
        example: "AAA-00000"
      message:
        type: string
        example: "Some error message."
      description:
        type: string
        example: "Some error description."
      traceId:
        type: string
        example: "e0fbcfeb-3617-43c4-8dd0-7b7d38e13047"
  ProvisioningConfiguration:
    type: object
    properties:
      inboundProvisioning:
        $ref: '#/definitions/InboundProvisioningConfiguration'
      outboundProvisioning:
        type: array
        items:
          $ref: '#/definitions/OutboundProvisioningConfiguration'
  InboundProvisioningConfiguration:
    type: object
    properties:
      scimConfiguration:
        $ref: '#/definitions/InboundProvisioningSCIMConfiguration'
  InboundProvisioningSCIMConfiguration:
    type: object
    properties:
      provisioningUserstoreDomain:
        type: string
        example: "PRIMARY"
        description: "This property becomes only applicable if the proxy-mode config is set to false"
      proxy-mode:
        type: boolean
        example: false
  OutboundProvisioningConfiguration:
    type: object
    properties:
      idp:
        type: string
        example: "Google"
      connector:
        type: string
        example: "googleapps"
      blocking:
        type: boolean
        example: false
      rules:
        type: boolean
        example: false
      jit:
        type: boolean
        example: false


  AdvancedAuthenticationConfiguration:
    type: object
    properties:
      saas:
        type: boolean
        example: false
        description: "Whether this application is allowed to be accessed across tenants"
      certificate:
        $ref: '#/definitions/Certificate'
      skipConsent:
        type: boolean
        example: false
      returnAuthenticatedListOfIdentityProviders:
        type: boolean
        example: false
      enableAuthorization:
        type: boolean
        example: true
  Certificate:
    type: object
    properties:
      type:
        type: string
        enum: ["jwks","pem"]
      value:
        type: string
        description: "Certificate value. If type is jwks, value should be jwks URL. If type is pem, value should be the certificate in PEM format."


  InboundProtocols:
    type: object
    properties:
      saml:
        $ref: '#/definitions/SAML2Parameters'
      oidc:
        $ref: '#/definitions/OIDCParameters'
      passiveSts:
        $ref: '#/definitions/PassiveSTSParameters'
      wsTrust:
        $ref: '#/definitions/WSTrustParameters'
      kerberosKDC:
        $ref: '#/definitions/KerberosKDCParameters'
      custom:
        type: array
        items:
          $ref: '#/definitions/CustomInboundProtcolParameters'


  #-----------------------------------------------------
  # Service Provider Claim Configuration
  #-----------------------------------------------------
  ClaimConfiguration:
    type: object
    properties:
      dialect:
        type: string
        enum: ["CUSTOM", "EXTERNAL", "LOCAL"]
        default: "LOCAL"
      claimMappings:
        type: array
        items:
          $ref: '#/definitions/ClaimMappings'
      requestedClaims:
        type: array
        items:
          $ref: '#/definitions/RequestedClaimConfiguration'
      subject:
        $ref: '#/definitions/SubjectConfig'
      role:
        $ref: '#/definitions/RoleConfig'
      # applicationClaimDialect:
      #   type: array
      #   items:
      #     type: string
      #   example:
      #     - "http://wso2.org/claims"
  SubjectConfig:
    type: object
    properties:
      claimId:
        type: string
        example: "http://wso2.org/claims/emailaddress"
      includeUserDomain:
        type: boolean
        example: false
      includeTenantDomain:
        type: boolean
        example: false
      useMappedLocalSubject:
        type: boolean
        example: false
  RoleConfig:
    type: object
    properties:
      mappings:
        type: array
        items:
          $ref: '#/definitions/RoleMapping'
      includeUserDomain:
        type: boolean
        example: true
      claimId:
        type: string
        example: "http://wso2.org/claims/groups"
  RoleMapping:
    type: object
    properties:
      localRole:
        type: string
        example: "admin"
      applicationRole:
        type: string
        example: "Administrator"

  RequestedClaimConfiguration:
    type: object
    properties:
      claimUri:
        type: string
        example: "http://wso2.org/claims/givenname"
        description: "User claims that need to be sent back to the application. If the claim mappings are local, use local claim uris. If the custom claim mappings are configured, use the mapped applicationClaimUri"
      mandatory:
        type: boolean
        example: false

  ClaimMappings:
    type: object
    properties:
      applicationClaimUri:
        type: string
        example: "firstname"
      localClaimUri:
        type: string
        example: "http://wso2.org/claims/givenname"

  ApplicationPermissions:
    type: object
    properties:
      permissions:
        type: array
        items:
          type: string
          example: "pickup-permission"

  SAML2Parameters:
    type: object
    properties:
      issuer:
        type: string
      assertionConsumerUrls:
        type: array
        items:
          type: string
      defaultAssertionConsumerUrl:
        type: string

      enableRequestSigning:
        type: boolean
        default: true

      enableAssertionEncryption:
        type: boolean
        default: false
      enableResponseSigning:
        type: boolean
        default: true

      serviceProviderQualifier:
        type: string
      nameIdFormat:
        type: string
        default: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
        example: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
      requestValidationCertificateAlias:
        type: string

      responseSigningAlgorithm:
        type: string
      responseDigestAlgorithm:
        type: string
      assertionEncryptionAlgroithm:
        type: string
      keyEncryptionAlgorithm:
        type: string

      #-----------------------------------------------------
      # Single Logout Configuration
      #-----------------------------------------------------
      enableSingleLogout:
        type: boolean
        default: true
      singleLogoutResponseUrl:
        type: string
        description: "Single logout response accepting endpoint"
      singleLogoutRequestUrl:
        type: string
        description: "Single logout request accepting endpoint"
      singleLogoutMethod:
        type: string
        enum: ["backchannel", "frontchannel_http_redirect", "frontchannel_http_post"]

      #-----------------------------------------------------
      # IDP Initiated SAML Flows
      #-----------------------------------------------------
      enableIdpInitiatedSingleSignOn:
        type: boolean
        default: false
      enableIdpInitiatedSingleLogOut:
        type: boolean
        default: false

  OIDCParameters:
    type: object
    properties:
      clientId:
        type: string
      clientSecret:
        type: string
      state:
        type: string
        enum: ["ACTIVE", "REVOKED"]
        default: "ACTIVE"
      version:
        type: string
        # enum: ["oauth2", "oauth1"]
        description: "Possible values are '2.0' and '1.0a'"
        default: "2.0"
      grantTypes:
        type: array
        example: ["authorization_code", "password"]
        items:
          type: string
      callbackURLs:
        type: array
        description: "Authorized redirect URIs"
        example: ["https://app.example.com/callback1", "https://app.example.com/callback2"]
        items:
          type: string

      allowedOrigins:
        type: array
        description: "Authorized JavaScript origins"
        example: ["https://app.example.com/js"]
        items:
          type: string

      publicClient:
        type: boolean
        default: false
        description: "Enabling this option will allow the client to authenticate without a client secret"
        example: false

      pkce:
        $ref: '#/definitions/OAuth2PKCEConfiguration'

      accessToken:
        $ref: "#/definitions/AccessTokenConfiguration"

      refreshToken:
        $ref: '#/definitions/RefreshTokenConfiguration'

      idToken:
        $ref: '#/definitions/IdTokenConfiguration'

      logout:
        $ref: '#/definitions/OIDCLogoutConfiguration'

      validateRequestObjectSignature:
        type: boolean
        default: false
        example: false

      scopeValidators:
        type: array
        example: [ "XACMLScopeValidator", "RoleBasedScopeValidator"]
        items:
          type: string

    required:
      - grantTypes
      - version

  OAuth2PKCEConfiguration:
    type: object
    properties:
      mandatory:
        type: boolean
        example: false
      supportPlainTransformAlgorithm:
        type: boolean
        example: true

  AccessTokenConfiguration:
    type: object
    properties:
      type:
        type: string
        example: "JWT"
      userAccessTokenExpiryInSeconds:
        type: integer
        example: 3600
      applicationAccessTokenExpiryInSeconds:
        type: integer
        example: 3600

  RefreshTokenConfiguration:
    type: object
    properties:
      expiryInSeconds:
        type: integer
        example: 86400
      renewRefreshToken:
        type: boolean
        example: true


  IdTokenConfiguration:
    type: object
    properties:
      expiryInSeconds:
        type: integer
        example: 3600
      audience:
        type: array
        example: [ "http://idp.xyz.com", "http://idp.abc.com"]
        items:
          type: string
      encryption:
        $ref: '#/definitions/IdTokenEncryptionConfiguration'

        # OAuth2TokenExpiry:
        #   type: object
        #   properties:
        #     userAccessTokenExpiryInSeconds:
        #       type: integer
        #       example: 3600
        #     applicationAccessTokenExpiryInSeconds:
        #       type: integer
        #       example: 3600
        #     refreshTokenExpiryInSeconds:
        #       type: integer
        #       example: 86400
        #     idTokenExpiryInSeconds:
        #       type: integer
        #       example: 3600

  IdTokenEncryptionConfiguration:
    type: object
    properties:
      enabled:
        type: boolean
        default : false
        example: false
      algorithm:
        type: string
        example: "RSA-OAEP"
      method:
        type: string
        example: "A128CBC+HS256"

  OIDCLogoutConfiguration:
    type: object
    properties:
      backChannelLogout:
        $ref: '#/definitions/OIDCBackChannelLogoutConfig'

  OIDCBackChannelLogoutConfig:
    type: object
    properties:
      enabled:
        type: boolean
        default : false
        example: false
      backChannelLogoutUrl:
        type: string
        example: "https://app.example.com/backchannellogout/callback"

        # OIDCAppStatePatchRequest:
        #   type: object
        #   properties:
        #     state:
        #       type: string
        #       default: "revoked"
        #       enum: ["active", "revoked"]

  PassiveSTSParameters:
    type: object
    properties:
      realm:
        type: string
      replyTo:
        type: string
  WSTrustParameters:
    type: object
    required:
      - endpointAddress
      - certificateAlias
    properties:
      endpointAddress:
        type: string
      certificateAlias:
        type: string
  KerberosKDCParameters:
    type: object
    required:
      - serviceName
      - password
    properties:
      serviceName:
        type: string
      description:
        type: string
      password:
        type: string

  CustomInboundProtcolParameters:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: 'custom-wso2-inbound'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

  Property:
    type: object
    properties:
      key:
        type: string
        example: 'app-identifier'
      value:
        type: string
        example: 'http://app.wso2.com/employeeApp'


  AuthenticationSequence:
    type: object
    properties:
      steps:
        type: array
        items:
          $ref: '#/definitions/AuthenticationStep'
      script:
        type: string
      subjectStepId:
        type: string
        example: "step1"
      attributeStepId:
        type: string
        example: "step1"
  AuthenticationStep:
    type: object
    properties:
      id:
        type: string
        example: "step1"
      options:
        type: array
        items:
          $ref: '#/definitions/Authenticator'

  Authenticator:
    type: object
    properties:
      idp:
        type: string
        example: "LOCAL"
      authenticator:
        type: string
        example: "basic"

#-----------------------------------------------------
# Security Definitions
#-----------------------------------------------------
securityDefinitions:
  BasicAuth:
    type: basic
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://localhost:9443/oauth2/authorize
    tokenUrl: http://localhost:9763/oauth2/token

#-----------------------------------------------------
# Parameters
#-----------------------------------------------------
parameters:
  limitQueryParam:
    in: query
    name: limit
    required: false
    description: |
      Maximum number of records to return.
    type: integer
    format: int32
  offsetQueryParam:
    in: query
    name: offset
    required: false
    description: |
      Number of records to skip for pagination.
    type: integer
    format: int32
  filterQueryParam:
    in: query
    name: filter
    required: false
    description: |
      Condition to filter the retrival of records.
    type: string
  sortQueryParam:
    in: query
    name: sort
    required: false
    description: |
      Define the order in which the retrieved records should be sorted.
      _This parameter is not supported yet._
    type: string
    enum: ["asc","desc"]
  sortByQueryParam:
    in: query
    name: sortBy
    required: false
    description: |
      Attribute by which the retrieved records should be sorted.
      _This parameter is not supported yet._
    type: string
  requiredAttributesQueryParam:
    in: query
    name: requiredAttributes
    required: false
    description: |
      Specifies the required parameters in the response
      _This parameter is not supported yet_
    type: string